About Jato
------------

Jato is a Just-in-time (JIT) compiler for Java. It is built on top of JamVM.


How can I try it out?
---------------------

- Download development tree:

  git clone git://git.kernel.org/pub/scm/java/jato/jato.git

- Compile Monoburg:

  cd <JATO_ROOT>/monoburg ; make

- Compile Jato and run the unit tests:

  cd <JATO_ROOT> ; make


Running Jato
------------

Command line options:

  -Xint		Operate in interpreter-only mode.  Useful for debugging.
  -Xtrace:jit	Trace all compilation phases for each method.
  -Xtrace:asm	Trace the emitted machine code for each method.


Development
-----------

If you use git for development, please remember to add your committer name
and email to .git/config file.  The format is as follows:

  [user]
    name = Jane Doe
    email = jane@foo.bar


How to run the regression test suite?
-------------------------------------

Prequisites:

  - Jikes Compiler (other Java compilers suffice too, but you need to hack the
    scripts)
  - GNU classpath (installed in /usr/local/classpath/)

To run the tests, execute the following commands:

  cd ../monoburg
  make
  cd ../test/regression
  ./run-suite.sh


How to launch Java applications with Jato under GDB?
----------------------------------------------------

NTPL threads cause problems while running Jato under gdb. You should
set the following environment variable before starting the debugger:

  export LD_ASSUME_KERNEL=2.4.1

To set up boot classpath for Jato, set the following environment variable:

  export BOOTCLASSPATH=<JATO_ROOT>/lib/classes.zip:/usr/local/classpath/share/classpath/glibj.zip

Finally, to launch a Java application with Jato under gdb:

  gdb --args <JATO_ROOT>/jato/jato <class>


How do I launch a simple application?
-------------------------------------

Run a simple Java application, you can download Christian Schneider's Java
tetris <http://www.liquidreality.de/main/projects/tetris> and launch it with
the following command (remembed to download jdom jar also):

  ./java -Xtrace:jit -Xms32M -Xnocompact -Xnoasyncgc \
         -Dgnu.classpath.boot.library.path=/usr/lib/classpath:lib/ \
         -Xbootclasspath:lib/classes.zip:/usr/share/classpath/glibj.zip \
         -classpath <TETRIS_HOME>/tetris_source.jar:<TETRIS_HOME>/jdom.jar \
         tetris/TetrisFrame

Note: Jato interacts badly with JamVM GC which is why you should make the
initial heap size big enough for GC not to trigger during execution.

To launch the application under gdb, use the following command:

  gdb --args ./java [...]


Copyright and License
---------------------

  Copyright (C) 2005-2007  Pekka Enberg

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License version 2 as
  published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


Acknowledgements
----------------

  - Reaktor Innovations Oy for sponsoring my work on this.
  - kernel.org for providing public space for my development tree.

Thank you!

What is it?

  Jato is a Java virtual machine implementation with a Just-in-time (JIT)
  compiler. It can currently run some simple Java programs on Linux/i386.

How can I try it out?

  - Download development tree:

    $ git clone git://git.kernel.org/pub/scm/java/jato/jato.git

  - Make sure you have necessary dependencies installed to compile the program.

    For Ubuntu:

    $ sudo apt-get install ecj classpath libffi-dev binutils-dev libzip-dev libglib2.0-dev valgrind

    For Fedora:

    $ su
    $ yum install eclipse-ecj ; exit

    and

    $ wget ftp://ftp.gnu.org/gnu/classpath/classpath-0.97.2.tar.gz
    $ tar xzvf classpath-0.97.2.tar.gz
    $ cd classpath-0.97.2
    $ ./configure ; make
    $ su
    $ make install ; exit

  - Compile Jato and run the unit tests:

    $ cd <JATO_ROOT> ; make


Running Jato

  Command line options:

    -Xtrace:invoke
      Trace method invocations.

    -Xtrace:invoke-verbose
      Trace method invocations (verbose mode).

    -Xtrace:jit
      Trace all compilation phases for each method.

    -Xtrace:asm
      Trace the emitted machine code for each method.

    -Xtrace:classloader
      Trace class loading and initialization.

    -Xtrace:trampoline
      Trace executed trampolines.


Development

  If you use git for development, please remember to add your committer name
  and email to .git/config file.  You can do that by running the following
  commands:

    git config user.name "Pekka Enberg"
    git config user.email penberg@cs.helsinki.fi


How to run the regression test suite?

  Installation prerequisites:

    - Eclipse Compiler for Java (ECJ)
    - GNU classpath installed in '/usr/local/classpath/'

  To run the test suite, execute the following commands:

    $ make regression


How do I launch a simple application?

  To run a simple Java application, you can download Christian Schneider's Java
  tetris at:

    http://www.liquidreality.de/display/liquid/Java+Tris

  and launch it with the following command:

    $ ./scripts/java -Xtrace:jit -jar tetris.jar

  Note: Jato interacts badly with JamVM GC which is why you should make
  the initial heap size big enough for GC not to trigger during
  execution.

  To launch the application under gdb, use the following command:

    $ gdb --args ./jato [...]


Copyright and License

  Copyright (C) 2005-2009  Pekka Enberg

  Jato is available under the GNU General Public License (GPL) version 2 with
  the following clarification and special exception:

    Linking this library statically or dynamically with other modules is making
    a combined work based on this library. Thus, the terms and conditions of the
    GNU General Public License cover the whole combination.

    As a special exception, the copyright holders of this library give you
    permission to link this library with independent modules to produce an
    executable, regardless of the license terms of these independent modules,
    and to copy and distribute the resulting executable under terms of your
    choice, provided that you also meet, for each linked independent module,
    the terms and conditions of the license of that module. An independent
    module is a module which is not derived from or based on this library. If
    you modify this library, you may extend this exception to your version of
    the library, but you are not obligated to do so. If you do not wish to do
    so, delete this exception statement from your version.

Acknowledgements

  I would like to thank the following people and organizations for supporting
  Jato development:

    Reaktor Innovations Oy for sponsoring initial development of Jato.

    Kernel.org for providing git hosting for Jato.

    Google for including Jato in Summer of Code 2008 and 2009.

  Thank you!

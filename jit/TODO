  - Move headers from jit/ to include/jit/ and include/vm/
  - Move non-JIT specific code to vm/
  - Fix Makefiles for jato/ and test/jit/ to use generic build
  - Unit and acceptance tests should be runnable from source directory root
    with one command
  - Change compile-time GNU classpath installation directory dependency to
    runtime. Better error reporting when GNU classpath Java and native
    libraries are not found.
  - Bytecode to IR conversion
	+ INVOKESPECIAL
	+ INVOKEVIRTUAL
	+ Better object and array type parsing for {GET|PUT|INVOKE}STATIC
	+ Converting whole compilation unit
	+ Replace STMT_NULLCHECK and STMT_ARRAYCHECK with STMT_IF and STMT_THROW
	+ Basic block successors and precedessors
	+ bytecode_size() for TABLESWITCH and LOOKUPSWITCH
	+ Bytecode sequences where expression stack is non-empty in
	  basic-block boundary (e.g. the 'x ? y : z' expression).
  - Instruction selection
  	+ STMT_IF
	+ Selection for whole compilation unit
  - Register allocation
	+ Linear scan register allocator [Poletto99]
  - Garbage collection
  	+ GC map generation
	+ Use GC maps for finding root references in doMark() in src/alloc.c
  - JIT code execution
	+ alloc_exec() allocates complete pages which is wasteful. Intel
	  optimization guide recommends 16-byte alignment for branch targets
	  so make alloc_exec() return smaller memory blocks.
	+ Patch call instruction in the caller to avoid redundant JIT
	  trampoline calls after target method has been compiled.
  - Code Optimization
	+ Constant propagation and folding
	+ Dead code elimination
	+ Devirtualization
	+ Method inlining
  - Interpreter
	+ Execution profiling for targeting JIT compilation
